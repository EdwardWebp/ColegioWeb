@page "/asignatura/edit/{id:int}"
@using ColegioWeb.Core.DTO.Asignatura
@using ColegioWeb.UI.FrontEnd.Services
@inject SweetAlertService Swal
@inject AsignaturaServices asignaturaservices
@inject NavigationManager Navigation

<div class="container">
    <h3>Editar Asignatura</h3>
    <hr />

    @if (asignatura == null)
    {
        <p><em>Cargando...</em></p>
    }
    else
    {

        <EditForm Model="asignatura" OnValidSubmit="HandleValidSubmit">
            <DataAnnotationsValidator />

            <div class="form-group">
                <label for="Nombre">Nombre</label>
                <InputText id="Nombre" class="form-control" @bind-Value="asignatura.Nombre" />
                <ValidationMessage For="@(() => asignatura.Nombre)" />
            </div>
            <div class="form-group">
                <label for="descripcion">Descripcion</label>
                <InputText id="descripcion" class="form-control" @bind-Value="asignatura.Descripción" />
                <ValidationMessage For="@(() => asignatura.Descripción)" />
            </div>

            <div class="button-container">
                <button type="submit" class="btn btn-success">Registrar Datos</button>
                <button class="btn-back" @onclick="Volver">Volver</button>
            </div>

        </EditForm>

        @if (!string.IsNullOrEmpty(Mensaje))
        {
            <div class="alert alert-success mt-3">@Mensaje</div>
        }
    }
</div>
<style>

    .container {
        max-width: 800px;
        margin-top: 30px;
    }

    h3 {
        font-size: 1.8rem;
        font-weight: bold;
    }

    .form-group {
        margin-bottom: 1.5rem;
    }

    input[type="text"], input[type="number"], select {
        border-radius: 0.5rem;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        transition: all 0.3s ease;
    }

        input[type="text"]:focus, input[type="number"]:focus, select:focus {
            border-color: #28a745;
            box-shadow: 0 0 5px rgba(40, 167, 69, 0.5);
        }

    .button-container button {
        border-radius: 50px;
        padding: 10px 20px;
        font-size: 1rem;
        transition: all 0.3s ease;
    }

        .button-container button:hover {
            transform: scale(1.05);
        }

    .alert {
        display: flex;
        align-items: center;
        font-size: 1rem;
    }

        .alert i {
            margin-right: 10px;
        }
</style>
@code {
    [Parameter]
    public int id { get; set; }
    private AsignaturaDTO asignatura;
    private string Mensaje;

    protected override async Task OnInitializedAsync()
    {
        asignatura = await asignaturaservices.GetAsignaturaById(id);
    }
    private async Task HandleValidSubmit()
    {
        await asignaturaservices.UpdateAsignaturaAsync(id, asignatura);
        Navigation.NavigateTo("/Asignatura");
        await Swal.FireAsync("¡¡Atualizado!!", "¡Los Datos del Asignatura han sido Actualizados de Manera Satisfactoria!", SweetAlertIcon.Success);

    }
    private void Volver()
    {
        Navigation.NavigateTo("/Asignatura");
    }
}
